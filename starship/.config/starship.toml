# Schema
"$schema" = 'https://starship.rs/config-schema.json'

# Inset new line between prompts
add_newline = true

# Format prompt
format = """\
[‚ï≠‚ï¥](fff)\
$all[‚ï∞‚îÄ](fff)$character"""

[character]
success_symbol = "[ÓòÇ](fff)"
error_symbol = "[ÓòÇ](fff)"

[directory]
truncation_length = 3
truncation_symbol = "‚Ä¶/"
home_symbol = "ÔÄï ~"
read_only_style = "197"
read_only = " ÔÄ£ "
format = "[$path]($style)[$read_only]($read_only_style) "

[git_branch]
symbol = "Û∞ò¨ "
format = "on [$symbol$branch]($style) "
style = "bold green"

[git_status]
format = '[\($all_status$ahead_behind\)]($style) '
style = "bold green"
conflicted = "üè≥"
up_to_date = "ÔÅÜ "
untracked = "Ôî© "
ahead = "‚á°${count}"
diverged = "‚áï‚á°${ahead_count}‚á£${behind_count}"
behind = "‚á£${count}"
stashed = "Û∞ãª "
modified = "ÔÅÑ "
staged = '[++\($count\)](green)'
renamed = "ÔÅÄ "
deleted = "ÔÄî "

[package]
disabled = true
[bun]
format = "via [$symbol]($style)"

[buf]
format = "via [$symbol]($style)"

[cmake]
format = "via [$symbol]($style)"

[cobol]
format = "via [$symbol]($style)"

[crystal]
format = "via [$symbol]($style)"

[daml]
format = "via [$symbol]($style)"

[dart]
format = "via [$symbol]($style)"

[deno]
format = "via [$symbol]($style)"

[dotnet]
format = "[$symbol(¬≠∆í√Ñ¬ª $tfm )]($style)"

[elixir]
format = 'via [$symbol]($style)'

[elm]
format = 'via [$symbol]($style)'

[erlang]
format = 'via [$symbol]($style)'

[golang]
format = 'via [$symbol]($style)'

[helm]
format = 'via [$symbol]($style)'

[julia]
format = 'via [$symbol]($style)'

[kotlin]
format = 'via [$symbol]($style)'

[lua]
format = 'via [$symbol]($style)'

[meson]
format = 'via [$symbol]($style)'

[nim]
format = 'via [$symbol]($style)'

[nodejs]
format = 'via [$symbol]($style)'

[ocaml]
format = 'via [$symbol(\($switch_indicator$switch_name\) )]($style)'

[perl]
format = 'via [$symbol]($style)'

[php]
format = 'via [$symbol]($style)'

[pulumi]
format = 'via [$symbol$stack]($style)'

[purescript]
format = 'via [$symbol]($style)'

[python]
format = 'via [$symbol]($style)'

[raku]
format = 'via [$symbol]($style)'

[red]
format = 'via [$symbol]($style)'

[rlang]
format = 'via [$symbol]($style)'

[ruby]
format = 'via [$symbol]($style)'

[rust]
format = 'via [$symbol]($style)'

[swift]
format = 'via [$symbol]($style)'

[vagrant]
format = 'via [$symbol]($style)'

[vlang]
format = 'via [$symbol]($style)'

[zig]
format = 'via [$symbol]($style)'

